{"version":3,"sources":["components/Search.js","components/Nominations.js","components/HelperButton.js","components/App.js"],"names":["Search","title","nominate","list","findInList","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","length","Response","style","paddingRight","paddingLeft","map","item","Grid","container","xs","sm","md","lg","xl","Title","Year","Button","margin","className","disabled","imdbID","variant","color","onClick","background","width","boxShadow","CircularProgress","Nominations","removeNomination","year","id","HelperButton","React","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","App","setTitle","setList","value","i","listToString","listString","forEach","JSON","stringify","substring","setCookie","newList","d","Date","setTime","getTime","expires","toGMTString","document","cookie","checkCookie","listCookie","decodeURIComponent","filteredList","split","filter","listToSet","properties","filteredProps","push","obj","key","data","box","getElementsByClassName","classList","remove","add","index","findIndex","splice","paddingTop","spacing","justify","alignItems","paddingBottom","padding","backgroundColor","borderRadius","maxWidth","TextField","label","name","onChange","event","target","minHeight","borderLeft","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","reason","render","getElementById"],"mappings":"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","file":"static/js/main.3a03ebb7.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nexport default function Search({ title, list, nominate, findInList }) {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://www.omdbapi.com/?apikey=6cabd6be&s=\" + title)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setIsLoaded(true);\n                setItems([result]);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n        )\n    }, [title])\n\n    \n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return (\n        <div>\n            Loading...<CircularProgress /> \n        </div>\n        )\n    } else if (title.length > 0 && items[0].Response === \"True\") {\n        return (\n            <div style={{paddingRight: 16}}>\n                <h3 style={{paddingLeft: 16}}>Results for \"{title}\"</h3>\n                <ul>\n                    {items[0].Search.map(item => (\n                    <li key={item.imdbID}>\n                        <Grid container>\n                            <Grid item xs={7} sm={8} md={7} lg={8} xl={9}>\n                                {item.Title} ({item.Year}) \n                            </Grid>\n                            <Grid item xs={2}>\n                                <Button \n                                    style={{margin: 5}} \n                                    className=\"btn\"\n                                    disabled = {findInList(item.imdbID) ? true : false}\n                                    variant=\"outlined\" \n                                    color=\"primary\"\n                                    onClick={() => nominate(item.imdbID, item.Title, item.Year)}\n                                    style={!findInList(item.imdbID) ? \n                                        {\n                                            background: 'linear-gradient(45deg, #E2BD64 25%, #fdc500 90%)',\n                                            // borderRadius: 3,\n                                            color: 'black',\n                                            // height: 45,\n                                            width: 120,\n                                            margin: 5,\n                                            boxShadow: '5px 5px rgba(226, 189, 100, .25)',\n                                        } : {\n                                            background: 'grey',\n                                            // borderRadius: 3,\n                                            color: 'black',\n                                            // height: 45,\n                                            margin: 5,\n                                            width: 120,\n                                            boxShadow: '5px 5px rgba(76, 76, 71, .15)',\n                                        }}>\n                                    <span>{findInList(item.imdbID) ? \"Nominated\": \"Nominate\"}</span>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    } else {\n        return (\n        <div>\n            <h3 style={{paddingLeft :16}}>\n                Search movie titles to get results...<br/>\n            </h3>\n        </div>);\n    }\n}\n\nSearch.propTypes = {\n    title: PropTypes.string.isRequired,\n};","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function Nominations({list, removeNomination}) {\n    return (\n        <div style={{paddingRight: 16}}>\n            <h3 style={{paddingLeft: 16}}>Nominations (Limit: 5)</h3>\n            <ul>\n                {list.map(item => (\n                    <li key={item.id}>\n                        <Grid container>\n                            <Grid item xs={7} sm={8} md={7} lg={8} xl={9}>\n                                {item.title} ({item.year})\n                            </Grid>\n                            <Grid item xs={2}>\n                                <Button \n                                    className=\"btn2\"\n                                    style={{margin: 5}} \n                                    variant=\"outlined\" \n                                    color=\"secondary\"\n                                    onClick={() => removeNomination(item.id, item.title, item.year)}\n                                    style={{\n                                            background: 'linear-gradient(45deg, #f38375 35%, #ef6351 90%)',\n                                            color: 'white',\n                                            // height: 45,\n                                            margin: 5,\n                                            width: 120,\n                                            boxShadow: '5px 5px rgba(239, 99, 81, .15)',\n                                        }}>\n                                    Remove\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Taken from Material UI, modified as needed.\nexport default function HelperButton() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n            No results?\n        </Button>\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{\"Helpful Note\"}</DialogTitle>\n            <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n                    The API requires at least 3 characters to return results.<br/><br/>\n                    Sometimes, it may also require you to complete words for certain searches.<br/>\n                    For example, 'guar' won't return results until you completed the word 'guard'.<br/><br/>\n                    If neither of the above helped, then we likely reached the daily call limits of 1000 searches for this API.\n                    Please try again tomorrow. :)\n            </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n                Ok\n            </Button>\n            </DialogActions>\n        </Dialog>\n    </div>\n  );\n}\n","import '../static/css/App.css';\nimport { render } from \"react-dom\";\nimport React, {useState, useEffect} from 'react'\nimport Search from './Search';\nimport Nominations from './Nominations';\nimport HelperButton from './HelperButton';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function App() {\n  const [title, setTitle] = useState('');\n  const [list, setList] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  // Snackbar for full nomination list\n  const snackbarOpen = () => {\n    setOpen(true);\n  };\n\n  const snackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  // Search field handling\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  // Helper methods to search the nomination list\n  const findInList = (value) => {\n    for(var i = 0; i < list.length; i += 1) {\n        if(list[i][\"id\"] === value) {\n            return true;\n        }\n    }\n    return false;\n  }\n\n  const findIndex = (value) => {\n    for(var i = 0; i < list.length; i += 1) {\n        if(list[i][\"id\"] === value) {\n            return i;\n        }\n    }\n    return -1;\n  } \n\n  // Helper method to convert list to string for the cookie\n  const listToString = (list) => {\n    let listString = ''\n    list.forEach(item => listString += (JSON.stringify(item).substring(1, JSON.stringify(item).length-1) + \"|\"))\n    return listString.substring(0,listString.length-1);\n  }\n\n  // Methods to nominate and remove nominations\n  const nominate = (id, title, year) => {\n    let newList = [];\n    if (!findInList(id) && list.length < 5) {\n        \n        list.forEach(item => newList.push(item));\n\n        newList.push({id, title, year});\n        setList(newList);\n        setCookie(listToString(newList));\n\n        let box = document.getElementsByClassName(\"nomList\")[0];\n        box.classList.remove('collapseList');\n        if (newList.length === 1) box.classList.add('extendList1');\n        else if (newList.length === 2) box.classList.add('extendList2');\n        else if (newList.length === 3) box.classList.add('extendList3');\n        else if (newList.length === 4) box.classList.add('extendList4');\n    } \n    if (newList.length === 5 || list.length === 5) {\n      snackbarOpen();\n    }\n  };\n\n  const removeNomination = (id, title, year) => {\n    if (findInList(id)) {\n      let newList = [];\n      list.forEach(item => newList.push(item));\n      \n      const index = findIndex(id);\n      if (index > -1) {\n        newList.splice(index, 1);\n      }\n      setList(newList);\n      setCookie(listToString(newList));\n      let box = document.getElementsByClassName(\"nomList\")[0];\n      box.classList.remove('extendList1');\n      box.classList.remove('extendList2');\n      box.classList.remove('extendList3');\n      box.classList.remove('extendList4');\n      if (newList.length === 4) box.classList.add('collapseList4');\n      else if (newList.length === 3) box.classList.add('collapseList3');\n      else if (newList.length === 2) box.classList.add('collapseList2');\n      else if (newList.length === 1) box.classList.add('collapseList1');\n    }\n  }\n\n  // Cookie methods\n  function setCookie(newList) {\n    var d = new Date();\n    // set to expire after a day\n    d.setTime(d.getTime() + (1*24*60*60*1000));\n    var expires = \"expires=\" + d.toGMTString();\n    document.cookie = \"list=\" + newList + \";\" + expires;\n  }\n  \n  function getCookie() {\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var objects = decodedCookie.substring(5,);\n    return objects;\n  }\n  \n  function checkCookie() {\n    var listCookie=getCookie();\n    if (listCookie !== \"\") {\n      // Splitting the cookie saved data to properly convert the string back to list\n      let newList = listCookie.split(\"|\");\n      let filteredList = newList.filter(item => {return item !=='';});\n      let listToSet = []\n      filteredList.forEach(item => {\n        let properties = (item.split(\",\"))\n        let filteredProps = []\n        properties.forEach(item => filteredProps.push((item.substring(1, item.length-1)).split(\":\\\"\")))\n        let obj = {};\n\n        filteredProps.forEach(item => {\n          let key = item[0].substring(0,item[0].length-1);\n          let value = item[1].substring(0, item[1].length);\n          obj[key] = value;\n        })\n        listToSet.push(obj)\n      })\n      setList(listToSet)\n    } else {\n      setCookie(list);\n    }\n  }\n\n  useEffect(() => {\n    checkCookie();\n  },[])\n\n  const data = {list, title, nominate, findInList, removeNomination};\n\n  return (\n    <div className=\"App\" style={{paddingTop: 50}}>\n      <Grid container spacing={1} justify=\"center\" alignItems=\"flex-start\">\n        {/* <Grid item sm={1} ></Grid> */}\n        <Grid item xs={12} sm={10} md={9} lg={9} style={{paddingBottom: 15}}>\n          <div>\n            <h1>The Shoppies: Movie Awards for Entrepreneurs</h1>\n            \n            <Grid container spacing={1} alignItems=\"flex-end\" style={{padding: 15, backgroundColor: \"#f4f3ee\",  borderRadius: 15, maxWidth: 550, boxShadow: '10px 10px rgba(239, 99, 81, .1)'}}>\n              <Grid item>\n                <SearchIcon/>\n              </Grid>\n              <Grid item>\n                <TextField \n                  label=\"Search\" \n                  name=\"title\" \n                  value={title} \n                  style={{width: 265}}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item style={{padding: \"0 0 10px 45px\"}}>\n                <HelperButton/>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n        {/* <Grid item sm={1} ></Grid> */}\n\n        <Grid item sm={1}></Grid>\n        <Grid item xs={12} sm={11} md={5} lg={5} style={{padding: 15, backgroundColor: \"#f4f3ee\", minHeight: 675, borderRadius: 15,  boxShadow: '10px 10px rgba(239, 99, 81, .1)'}}>\n          <Search {...data}/>\n        </Grid>\n        {/* <Grid item md={1}></Grid> */}\n        <Grid item xs={12} sm={11} md={5} lg={5} className=\"nomList\" style={{padding: 15, backgroundColor: \"#f4f3ee\", borderLeft: \"2px #fbd589 solid\", minHeight: 100, borderRadius: 15, boxShadow: '10px 10px rgba(239, 99, 81, .1)'}}>\n          <Nominations {...data}/>\n        </Grid>\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            open={open}\n            autoHideDuration={3000}\n            onClose={snackbarClose}\n            message=\"Thank you for nominating 5 great movies!\"\n            style={{alignItems: \"center\"}}\n          />\n      </Grid>\n    </div>\n  );\n}\n\nrender(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}